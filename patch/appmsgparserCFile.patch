diff --git a/src/opend/dspg/cmbs/test/appcmbs/appmsgparser.c b/sw_package_host/test/appcmbs/appmsgparser.c
index 4dd0e9d..29d3f91 100644
--- a/src/opend/dspg/cmbs/test/appcmbs/appmsgparser.c
+++ b/sw_package_host/test/appcmbs/appmsgparser.c
@@ -54,10 +54,6 @@
 #endif
 
 static u8 g_msgparser_enabled = 1;
-u16 u16_DeviceId;
-u8  u8_HandsetId;
-u8  u8_callId;
-
 
 #define APPCMBS_LOG(...)	\
 	{ \
@@ -102,14 +98,6 @@ u8  u8_callId;
 
 #define CMBS_PRINT_RELEASE_REASON(x)	case x: {char *temp = #x; APPCMBS_LOG("%s",&temp[16]); break;}
 
-static hsSuccessfullyRegistered successfullyRegistered;
-
-void initMsgParserSub(hsSuccessfullyRegistered registeredClb)
-{
-  if(!registeredClb)return;
-  successfullyRegistered = registeredClb;
-}
-
 char* app_GetAFEEndpointString(E_CMBS_AFE_CHANNEL e_Channel)
 {
     switch (e_Channel)
@@ -879,7 +867,6 @@ CMBS_PARSE_DECL(CMBS_IE_CALLSTATE)
 
     APPCMBS_LOG("Call state: \n");
     APPCMBS_LOG("CallID = %d \n", st_CallState.u8_ActCallID);
-    u8_callId = st_CallState.u8_ActCallID;
     APPCMBS_LOG("LineMask = 0x%02X \n", st_CallState.u8_LinesMask);
     APPCMBS_LOG("HSMask = 0x%04X\n", st_CallState.u16_HandsetsMask);
     APPCMBS_LOG("CallType = %s \n", cmbs_dbg_GetCallTypeName(st_CallState.e_CallType));
@@ -1225,7 +1212,6 @@ CMBS_PARSE_DECL(CMBS_IE_HANDSETS)
         if ( u16_Handsets & (1 << i) )
             break;
     }
-    u8_HandsetId = i+1;
     APPCMBS_LOG("Hs mask = 0x%04X, First HS (1 based)=%d", u16_Handsets, i + 1);
 }
 //////////////////////////////////////////////////////////////////////////
@@ -1763,11 +1749,11 @@ CMBS_PARSE_DECL(CMBS_IE_LA_PROP_CMD)
         APPCMBS_LOG("%X ", st_PropLACmd.pu8_data[i]);
     }
 }
-
 //////////////////////////////////////////////////////////////////////////
 CMBS_PARSE_DECL(CMBS_IE_REG_CLOSE_REASON)
 {
     ST_IE_REG_CLOSE_REASON st_RegCloseReason;
+
     CMBS_SAFE_GET_IE(cmbs_api_ie_RegCloseReasonGet, &st_RegCloseReason);
 
     switch (st_RegCloseReason.e_Reg_Close_Reason)
@@ -1775,10 +1761,8 @@ CMBS_PARSE_DECL(CMBS_IE_REG_CLOSE_REASON)
     case CMBS_REG_CLOSE_TIMEOUT:
         APPCMBS_LOG("Registration timeout ");     			break;
     case CMBS_REG_CLOSE_HS_REGISTERED:
-        APPCMBS_LOG("HS successfully registered ");
-        if(!successfullyRegistered) break;
-        successfullyRegistered(u16_DeviceId, u8_HandsetId);
-        break;
+        APPCMBS_LOG("HS successfully registered ");  	  		break;
+
     default:
         APPCMBS_LOG("UNKNOWN Module ");
     }
@@ -3307,12 +3291,10 @@ CMBS_PARSE_DECL(CMBS_IE_HAN_BROADCAST_CHANNEL_TABLE_ENTRIES)
     }
 }
 
-// u16 u16_DeviceId;
-
 /////////////////////////////////////////////////////////////////////////
 CMBS_PARSE_DECL(CMBS_IE_HAN_DEVICE)
 {
-
+    u16 u16_DeviceId;
     CMBS_SAFE_GET_IE2(cmbs_api_ie_ShortValueGet, &u16_DeviceId, CMBS_IE_HAN_DEVICE);
     APPCMBS_LOG("Device Id = %d ", u16_DeviceId);
 }
@@ -3836,14 +3818,11 @@ CMBS_PARSE_DECL(CMBS_IE_HAN_BASE_INFO)
 
 }
 
-/* Use as global variable for access. */
-ST_HAN_REG_STAGE_1_STATUS	st_Status;
-
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
 CMBS_PARSE_DECL(CMBS_IE_HAN_DEVICE_REG_STAGE1_OK_STATUS_PARAMS)
 {
-    // ST_HAN_REG_STAGE_1_STATUS	st_Status;
+    ST_HAN_REG_STAGE_1_STATUS	st_Status;
 
     CMBS_SAFE_GET_IE(cmbs_api_ie_HANRegStage1OKResParamsGet, &st_Status);
 
